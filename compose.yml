version: '3.9'

services:
  ollama:
    image: ollama/ollama
    restart: always
    container_name: ollama
    ports:
      - "11434:11434"
    expose:
      - 11434
    volumes:
      - ./volumes/ollama:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  db:
    # https://habr.com/ru/articles/754168/
    # https://habr.com/ru/articles/578744/
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    expose:
      - ${DB_PORT}
    container_name: db
    restart: always
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - ./etc/postgres/postgresql.conf:/etc/postgresql.conf:ro
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  metadata:
    image: mongo:8.0.0-rc6-jammy
    container_name: metadata
    restart: always
    env_file:
      - .env
    ports:
      - "${MONGO_DB_PORT}:27017"
    expose:
      - ${MONGO_DB_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASS}
    volumes:
      - mongo_db:/data/db

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./volumes/qdrant/data:/qdrant_data

#  cache:
#    image: redis:7.2-alpine
#    restart: always
#    container_name: cache
#    env_file:
#      - .env
#    environment:
#      - ALLOW_EMPTY_PASSWORD=no
#      - REDIS_PASSWORD=${REDIS_PASS}
#    ports:
#      - "${REDIS_PORT}:${REDIS_PORT}"
#    expose:
#      - ${REDIS_PORT}
#    command: ["redis-server", "--port", "${REDIS_PORT}", "--loglevel", "warning"]
    # `--save 60 1` чтобы сохранять копии каждые 60с, если была хотя бы одна операция

#  elasticsearch:
#    profiles:
#      - elastic
#    image: elasticsearch:8.13.0
#    configs:
#      - source: elastic_config
#        target: /usr/share/elasticsearch/config/elasticsearch.yml
#    volumes:
#      - ./volumes/elasticsearch/data:/usr/share/elasticsearch/data
#    environment:
#      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
#      ELASTIC_USERNAME: "elastic"
#      ELASTIC_PASSWORD: "MyPw123"
#      discovery.type: single-node
#    ports:
#      - "9200:9200"
#      - "9300:9300"

volumes:
  postgres_db:
  # К сожалению, при перезапуске нужно иногда стирать volume mongo_db
  # это связано с тем, что по-новому начинают рассчитываться хэши
  mongo_db:

configs:
  qdrant_config:
    content: |
      log_level: INFO
      # https://qdrant.tech/documentation/guides/configuration/
      storage:
        # Where to store all the data
        on_disk_payload: true  
        storage_path: /qdrant_data/storage

#  elastic_config:
#    content: |
#      cluster.name: "vectorstore"
#      network.host: 0.0.0.0 # Для корректной работы внутри контейнера
#
#      xpack.security.enabled: true # Для поддержки функционала, обеспечивающего безопасность кластера
#      xpack.license.self_generated.type: basic # Типа лицензии "basic" для наших нужд хватит с головой
